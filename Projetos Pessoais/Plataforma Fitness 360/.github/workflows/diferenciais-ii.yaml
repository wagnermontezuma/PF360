name: Diferenciais II CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/gymbot-svc/**'
      - 'backend/loyalty-svc/**'
      - 'backend/belt-svc/**'
      - 'backend/marketplace-svc/**'
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [gymbot-svc, loyalty-svc, belt-svc, marketplace-svc]
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: |
          cd backend/${{ matrix.service }}
          pnpm install
      
      - name: Run tests
        run: |
          cd backend/${{ matrix.service }}
          pnpm test
          pnpm test:e2e
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          WHATSAPP_API_TOKEN: ${{ secrets.WHATSAPP_API_TOKEN }}

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        service: [gymbot-svc, loyalty-svc, belt-svc, marketplace-svc]
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd backend/${{ matrix.service }}
          docker build -t $ECR_REGISTRY/${{ matrix.service }}:$IMAGE_TAG .
          docker push $ECR_REGISTRY/${{ matrix.service }}:$IMAGE_TAG
      
      - name: Deploy to EKS
        run: |
          aws eks update-kubeconfig --name fit360-staging
          helm upgrade --install ${{ matrix.service }} ./helm/${{ matrix.service }} \
            --namespace staging \
            --set image.tag=${{ github.sha }} \
            --set canary.enabled=true \
            --set canary.weight=5