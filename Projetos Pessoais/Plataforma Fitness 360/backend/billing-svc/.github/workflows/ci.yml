name: CI

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/billing-svc/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/billing-svc/**'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: billing_svc_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'backend/billing-svc/package-lock.json'

    - name: Install dependencies
      working-directory: backend/billing-svc
      run: npm ci

    - name: Run linter
      working-directory: backend/billing-svc
      run: npm run lint

    - name: Run tests
      working-directory: backend/billing-svc
      run: npm run test:cov
      env:
        NODE_ENV: test
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
        DATABASE_USERNAME: postgres
        DATABASE_PASSWORD: postgres
        DATABASE_NAME: billing_svc_test
        STRIPE_API_KEY: ${{ secrets.STRIPE_TEST_KEY }}
        STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}

    - name: Run E2E tests
      working-directory: backend/billing-svc
      run: npm run test:e2e
      env:
        NODE_ENV: test
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
        DATABASE_USERNAME: postgres
        DATABASE_PASSWORD: postgres
        DATABASE_NAME: billing_svc_test
        STRIPE_API_KEY: ${{ secrets.STRIPE_TEST_KEY }}
        STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        directory: backend/billing-svc/coverage

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v3

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: 'backend/billing-svc'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'

    - name: Run SAST scan
      uses: github/codeql-action/init@v2
      with:
        languages: javascript
        source-root: backend/billing-svc

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: backend/billing-svc
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/billing-svc:latest
          ghcr.io/${{ github.repository }}/billing-svc:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max 