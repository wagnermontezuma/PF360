{
  "info": {
    "name": "Billing MVP",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response time is less than 800ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(800);",
                  "});",
                  "",
                  "const jsonData = pm.response.json();",
                  "pm.test('Token is present', function () {",
                  "    pm.expect(jsonData.data.login.token).to.be.a('string');",
                  "    pm.environment.set('jwt', jsonData.data.login.token);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"query\":\"mutation Login($email: String!, $password: String!) { login(email: $email, password: $password) { token } }\",\"variables\":{\"email\":\"admin@fit360.com\",\"password\":\"{{admin_password}}\"}}"
            },
            "url": {
              "raw": "{{gateway_url}}/graphql",
              "host": ["{{gateway_url}}"],
              "path": ["graphql"]
            }
          }
        }
      ]
    },
    {
      "name": "Billing",
      "item": [
        {
          "name": "Create Invoice",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.environment.set('idempotencyKey', pm.variables.replaceIn('{{$guid}}'));"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response time is less than 800ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(800);",
                  "});",
                  "",
                  "const jsonData = pm.response.json();",
                  "pm.test('Invoice is created', function () {",
                  "    pm.expect(jsonData.data.createInvoice).to.be.an('object');",
                  "    pm.expect(jsonData.data.createInvoice.id).to.be.a('string');",
                  "    pm.environment.set('invoiceId', jsonData.data.createInvoice.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt}}"
              },
              {
                "key": "x-tenant-id",
                "value": "{{tenant_id}}"
              },
              {
                "key": "Idempotency-Key",
                "value": "{{idempotencyKey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"query\":\"mutation CreateInvoice($input: CreateInvoiceInput!) { createInvoice(input: $input) { id memberId amount status } }\",\"variables\":{\"input\":{\"memberId\":\"{{memberId}}\",\"amount\":99.90,\"description\":\"Mensalidade Academia\",\"dueDate\":\"2024-03-20\"}}}"
            },
            "url": {
              "raw": "{{gateway_url}}/graphql",
              "host": ["{{gateway_url}}"],
              "path": ["graphql"]
            }
          }
        },
        {
          "name": "Process Payment",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.environment.set('idempotencyKey', pm.variables.replaceIn('{{$guid}}'));"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response time is less than 800ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(800);",
                  "});",
                  "",
                  "const jsonData = pm.response.json();",
                  "pm.test('Payment is processed', function () {",
                  "    pm.expect(jsonData.data.processPayment).to.be.an('object');",
                  "    pm.expect(jsonData.data.processPayment.status).to.equal('SUCCESS');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt}}"
              },
              {
                "key": "x-tenant-id",
                "value": "{{tenant_id}}"
              },
              {
                "key": "Idempotency-Key",
                "value": "{{idempotencyKey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"query\":\"mutation ProcessPayment($input: ProcessPaymentInput!) { processPayment(input: $input) { id status amount } }\",\"variables\":{\"input\":{\"invoiceId\":\"{{invoiceId}}\",\"paymentMethodId\":\"{{stripe_test_card_id}}\"}}}"
            },
            "url": {
              "raw": "{{gateway_url}}/graphql",
              "host": ["{{gateway_url}}"],
              "path": ["graphql"]
            }
          }
        },
        {
          "name": "Member Payment History",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response time is less than 800ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(800);",
                  "});",
                  "",
                  "const jsonData = pm.response.json();",
                  "pm.test('Payment history is returned', function () {",
                  "    pm.expect(jsonData.data.memberPaymentHistory).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt}}"
              },
              {
                "key": "x-tenant-id",
                "value": "{{tenant_id}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"query\":\"query MemberPaymentHistory($memberId: ID!) { memberPaymentHistory(memberId: $memberId) { id amount status createdAt } }\",\"variables\":{\"memberId\":\"{{memberId}}\"}}"
            },
            "url": {
              "raw": "{{gateway_url}}/graphql",
              "host": ["{{gateway_url}}"],
              "path": ["graphql"]
            }
          }
        }
      ]
    }
  ]
} 